{"version":3,"file":"mistx-connect.esm.js","sources":["../src/socket.ts"],"sourcesContent":["import { io, Socket } from 'socket.io-client'\nimport { BigNumberish } from '@ethersproject/bignumber'\n\nexport enum Event {\n  GAS_CHANGE = 'GAS_CHANGE',\n  SOCKET_SESSION = 'SOCKET_SESSION',\n  SOCKET_ERR = 'SOCKET_ERR',\n  MISTX_BUNDLE_REQUEST = 'MISTX_BUNDLE_REQUEST',\n  BUNDLE_STATUS_REQUEST = 'BUNDLE_STATUS_REQUEST',\n  BUNDLE_STATUS_RESPONSE = 'BUNDLE_STATUS_RESPONSE',\n  BUNDLE_RESPONSE = 'BUNDLE_RESPONSE',\n  BUNDLE_CANCEL_REQUEST = 'BUNDLE_CANCEL_REQUEST'\n}\n\nexport interface Gas {\n  readonly rapid: string\n  readonly fast: string\n  readonly slow: string\n  readonly standard: string\n  readonly timestamp: number\n}\n\nexport enum Status {\n  PENDING_BUNDLE = 'PENDING_BUNDLE',\n  FAILED_BUNDLE = 'FAILED_BUNDLE',\n  SUCCESSFUL_BUNDLE = 'SUCCESSFUL_BUNDLE',\n  CANCEL_BUNDLE_SUCCESSFUL = 'CANCEL_BUNDLE_SUCCESSFUL',\n  BUNDLE_NOT_FOUND = 'BUNDLE_NOT_FOUND'\n}\n\nexport const STATUS_LOCALES: Record<string, string> = {\n  PENDING_BUNDLE: 'Flashbots working on including your swap',\n  FAILED_BUNDLE: 'Failed',\n  SUCCESSFUL_BUNDLE: 'Success',\n  CANCEL_BUNDLE_SUCCESSFUL: 'Cancelled',\n  BUNDLE_NOT_FOUND: 'Failed'\n}\n\nexport enum Diagnosis {\n  LOWER_THAN_TAIL = 'LOWER_THAN_TAIL',\n  NOT_A_FLASHBLOCK = 'NOT_A_FLASHBLOCK',\n  BUNDLE_OUTBID = 'BUNDLE_OUTBID',\n  ERROR_API_BEHIND = 'ERROR_API_BEHIND',\n  MISSING_BLOCK_DATA = 'MISSING_BLOCK_DATA',\n  ERROR_UNKNOWN = 'ERROR_UNKNOWN'\n}\n\nexport interface MistXVersion {\n  api: string\n  client: string\n}\n\nexport interface SocketSession {\n  token: string\n  version: MistXVersion | undefined\n}\n\nexport interface TransactionRes {\n  transaction: TransactionProcessed\n  status: Status\n  message: string\n  error: string\n}\n\nexport interface TransactionDiagnosisRes {\n  transaction: TransactionProcessed\n  blockNumber: number\n  flashbotsResolution: string\n  mistxDiagnosis: Diagnosis\n}\n\nexport interface TransactionReq {\n  serialized: string // serialized transaction\n  raw: SwapReq | undefined // raw def. of each type of trade\n  estimatedGas?: number\n  estimatedEffectiveGasPrice?: number\n}\n\nexport interface TransactionProcessed {\n  serialized: string // serialized transaction\n  bundle: string // bundle.serialized\n  raw: SwapReq | undefined // raw def. of each type of trade\n  estimatedGas: number\n  estimatedEffectiveGasPrice: number\n}\n\nexport interface BundleReq {\n  transactions: TransactionReq[]\n  chainId: number\n  bribe: string // BigNumber\n  from: string\n  deadline: BigNumberish\n  simulateOnly: boolean\n}\n\nexport interface SwapReq {\n  amount0: BigNumberish\n  amount1: BigNumberish\n  path: Array<string>\n  to: string\n}\n\nexport interface BundleProcessed {\n  serialized: string\n  transactions: TransactionProcessed[]\n  bribe: BigNumberish\n  sessionToken: string\n  chainId: number\n  timestamp: number // EPOCH,\n  totalEstimatedGas: number\n  totalEstimatedEffectiveGasPrice: number\n  from: string\n  deadline: BigNumberish\n  simulateOnly: boolean\n}\ninterface BundleRes {\n  bundle: BundleProcessed\n  status: string\n  message: string\n  error: string\n}\n\ninterface BundleStatusRes {\n  bundle: string | BundleProcessed // BundleProcessed.serialized\n  status: string\n  message: string\n  error: string\n}\ninterface QuoteEventsMap {\n  [Event.SOCKET_SESSION]: (response: SocketSession) => void\n  [Event.SOCKET_ERR]: (err: any) => void\n  [Event.GAS_CHANGE]: (response: Gas) => void\n  [Event.MISTX_BUNDLE_REQUEST]: (response: any) => void\n  [Event.BUNDLE_RESPONSE]: (response: BundleRes) => void\n  [Event.BUNDLE_CANCEL_REQUEST]: (serialized: any) => void // TO DO - any\n  [Event.BUNDLE_STATUS_REQUEST]: (serialized: any) => void // TO DO - any\n  [Event.BUNDLE_STATUS_RESPONSE]: (serialized: BundleStatusRes) => void // TO DO - any\n}\n\ninterface SocketOptions {\n  onConnect?: () => void\n  onConnectError?: (err: any) => void\n  onDisconnect?: (err: any) => void\n  onError?: (err: any) => void\n  onGasChange?: (gas: any) => void\n  onTransactionResponse?: (response: BundleRes) => void\n  onTransactionUpdate?: (response: BundleStatusRes) => void\n}\n\nconst defaultServerUrl = 'https://mistx-app-goerli.herokuapp.com'\nconst tokenKey = `SESSION_TOKEN`\n\nexport class MistxSocket {\n  private socket: Socket<QuoteEventsMap, QuoteEventsMap>\n\n  constructor(serverUrl: string = defaultServerUrl) {\n    const token = localStorage.getItem(tokenKey)\n    const socket: Socket<QuoteEventsMap, QuoteEventsMap> = io(serverUrl, {\n      transports: ['websocket'],\n      auth: { token },\n      reconnection: true,\n      reconnectionDelay: 5000,\n      autoConnect: true\n    })\n\n    this.socket = socket\n  }\n\n  private disconnect() {\n    this.socket.off('connect')\n    this.socket.off('connect_error')\n    this.socket.off(Event.SOCKET_ERR)\n    this.socket.off(Event.SOCKET_SESSION)\n    this.socket.off(Event.GAS_CHANGE)\n    this.socket.off(Event.BUNDLE_RESPONSE)\n    this.socket.off(Event.BUNDLE_STATUS_RESPONSE)\n  }\n\n  public init({\n    onConnect,\n    onConnectError,\n    onDisconnect,\n    onError,\n    onGasChange,\n    onTransactionResponse,\n    onTransactionUpdate,\n  }: SocketOptions) {\n    this.socket.on('connect', () => {\n      // console.log('websocket connected')\n      if (onConnect) onConnect()\n    })\n  \n    this.socket.on('connect_error', (err: any) => {\n      // console.log('websocket connect error', err)\n      if (onConnectError) onConnectError(err)\n    })\n  \n    this.socket.on('disconnect', (err: any) => {\n      // console.log('websocket disconnect', err)\n      if (onDisconnect) onDisconnect(err)\n    })\n  \n    this.socket.on(Event.SOCKET_ERR, (err: any) => {\n      // console.log('websocket err', err)\n      if (onError) onError(err)\n    })\n  \n    this.socket.on(Event.SOCKET_SESSION, (session: any) => {\n      localStorage.setItem(tokenKey, session.token)\n    })\n  \n    this.socket.on(Event.GAS_CHANGE, (gas: any) => {\n      if (onGasChange) onGasChange(gas)\n    })\n  \n    this.socket.on(Event.BUNDLE_RESPONSE, (response: BundleRes) => {\n      if (onTransactionResponse) onTransactionResponse(response)\n    })\n  \n    this.socket.on(Event.BUNDLE_STATUS_RESPONSE, (response: BundleStatusRes) => {\n      if (onTransactionUpdate) onTransactionUpdate(response)\n    })\n  \n    return () => {\n      this.disconnect()\n    }\n  }\n\n  public emitTransactionRequest(transaction: TransactionReq) {\n    this.socket.emit(Event.MISTX_BUNDLE_REQUEST, transaction)\n  }\n\n  public emitStatusRequest(transaction: TransactionReq) {\n    this.socket.emit(Event.BUNDLE_STATUS_REQUEST, transaction)\n  }\n  \n  public emitTransactionCancellation(serialized: BundleStatusRes) {\n    this.socket.emit(Event.BUNDLE_CANCEL_REQUEST, serialized)\n  }\n}\n"],"names":["Event","Status","STATUS_LOCALES","PENDING_BUNDLE","FAILED_BUNDLE","SUCCESSFUL_BUNDLE","CANCEL_BUNDLE_SUCCESSFUL","BUNDLE_NOT_FOUND","Diagnosis","defaultServerUrl","tokenKey","MistxSocket","serverUrl","token","localStorage","getItem","socket","io","transports","auth","reconnection","reconnectionDelay","autoConnect","disconnect","off","SOCKET_ERR","SOCKET_SESSION","GAS_CHANGE","BUNDLE_RESPONSE","BUNDLE_STATUS_RESPONSE","init","onConnect","onConnectError","onDisconnect","onError","onGasChange","onTransactionResponse","onTransactionUpdate","on","err","session","setItem","gas","response","emitTransactionRequest","transaction","emit","MISTX_BUNDLE_REQUEST","emitStatusRequest","BUNDLE_STATUS_REQUEST","emitTransactionCancellation","serialized","BUNDLE_CANCEL_REQUEST"],"mappings":"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"}